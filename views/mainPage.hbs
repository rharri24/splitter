<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Student Ride Sharing</title>
  <script src="https://unpkg.com/htmx.org@1.9.2"></script>
  <link rel="stylesheet" href="style.css" />
  <style>
    /* Hotspots Section */
    .hotspots-section {
      margin: 32px 0;
      padding: 24px;
      background: var(--surface);
      border-radius: 12px;
      box-shadow: 0 2px 8px var(--shadow);
    }

    .section-subtitle {
      color: var(--text-muted);
      font-size: 14px;
      margin-top: -8px;
      margin-bottom: 20px;
    }

    .hotspots-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 16px;
    }

    .hotspot-card {
      background: linear-gradient(135deg, #f9fafb 0%, #ffffff 100%);
      border: 2px solid var(--border);
      border-left: 5px solid var(--primary);
      border-radius: 10px;
      padding: 16px;
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .hotspot-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 8px 16px rgba(0,0,0,0.1);
      border-left-color: var(--accent);
    }

    .hotspot-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 12px;
    }

    .hotspot-location {
      font-size: 16px;
      font-weight: 700;
      color: var(--text-main);
      flex: 1;
    }

    .hotspot-badge {
      background: linear-gradient(135deg, var(--primary), var(--accent));
      color: white;
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 13px;
      font-weight: 600;
      white-space: nowrap;
      margin-left: 12px;
    }

    .hotspot-details {
      color: var(--text-muted);
      font-size: 13px;
      line-height: 1.4;
    }

    .hotspot-details small {
      display: block;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .empty-state {
      text-align: center;
      color: var(--text-muted);
      padding: 32px;
      font-style: italic;
    }

    .other-destinations-section {
      margin-top: 32px;
    }

    /* Map Section */
    .map-section {
      margin: 32px 0;
      padding: 24px;
      background: var(--surface);
      border-radius: 12px;
      box-shadow: 0 2px 8px var(--shadow);
    }

    #hotspot-map {
      width: 100%;
      height: 400px;
      border-radius: 8px;
      border: 2px solid var(--border);
    }

    .leaflet-popup-content-wrapper {
      border-radius: 8px;
    }

    .map-popup-content {
      text-align: center;
      padding: 8px;
    }

    .map-popup-location {
      font-weight: 700;
      font-size: 16px;
      color: var(--text-main);
      margin-bottom: 8px;
    }

    .map-popup-count {
      background: linear-gradient(135deg, var(--primary), var(--accent));
      color: white;
      padding: 4px 12px;
      border-radius: 12px;
      font-size: 14px;
      font-weight: 600;
      display: inline-block;
      margin-bottom: 8px;
    }

    .map-popup-students {
      font-size: 12px;
      color: var(--text-muted);
    }

    @media (max-width: 768px) {
      .hotspots-grid {
        grid-template-columns: 1fr;
      }

      #hotspot-map {
        height: 300px;
      }
    }
  </style>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
</head>
<div class="dashboard-container">
  <h1>HOME</h1>

  <div id="student-info">
    <h2>Welcome, <span id="student-name">{{name}}</span></h2>
    <p>Email: <span id="student-email">{{email}}</span></p>
    <p>UID: <span id="student-uid">{{uid}}</span></p>
  </div>



  <div id="destinations-container">
    <!-- Always show this form -->
    <div class="add-destination-container">
      <h3>Add a Destination</h3>
      <form
        hx-post="/api/add-destination"
        hx-trigger="submit"
        hx-target="#destinations-container"
        hx-swap="outerHTML"
      >
        <input type="hidden" name="email" value="{{email}}" />
        <input type="hidden" name="uid" value="{{uid}}" />
        <div class="form-group">
          <label for="location">Where are you going?</label>
          <input type="text" id="location" name="location" placeholder="e.g., BWI Airport" required />
        </div>
        <div class="form-group">
          <label for="arrivalTime">When do you need to arrive?</label>
          <input type="datetime-local" id="arrivalTime" name="arrivalTime" required />
        </div>
        <button type="submit" class="btn-primary">Add Destination</button>
      </form>
    </div>

    <!-- List of current destinations -->
    <div class="existing-destinations">
      <h3>Your Destinations</h3>
      {{#if destinations.length}}
        <ul class="destination-list">
          {{#each destinations}}
  <li style="display: flex; justify-content: space-between; align-items: center;">
    <div>
      <h4>{{this.location}}</h4>
      <p>Arrival: {{this.arrivalTime}}</p>
    </div>
    <div style="display: flex; gap: 10px;">
      <!-- Find Matches Button -->
      <form action="/matchResults" method="GET">
        <input type="hidden" name="email" value="{{../email}}" />
        <input type="hidden" name="uid" value="{{../uid}}" />
        <input type="hidden" name="location" value="{{this.location}}" />
        <input type="hidden" name="arrivalTime" value="{{this.arrivalTime}}" />
        <button type="submit" class="btn-secondary">Find Matches</button>
      </form>

      <!-- Delete Button -->
      <button 
  class="btn-delete"
  hx-delete="/api/delete-destination"
  hx-vals='{"email": "{{../email}}", "index": {{@index}} }'
  hx-target="#destinations-container"
  hx-swap="outerHTML"
>
  Delete
</button>
    </div>
  </li>
{{/each}}
        </ul>
      {{else}}
        <p>No destinations yet.</p>
      {{/if}}
    </div>




<!-- Hotspot Map -->
{{#if hotspotPins.length}}
<div class="map-section">
  <h3>üó∫Ô∏è Hotspot Map</h3>
  <p class="section-subtitle">Popular destinations visualized</p>
  <div id="hotspot-map"></div>
</div>
{{/if}}

<!-- Hotspot Destinations -->
<div class="hotspots-section">
  <h3>üî• Popular Destinations</h3>
  <p class="section-subtitle">See where most students are heading</p>
  {{#if hotspots.length}}
    <div class="hotspots-grid">
      {{#each hotspots}}
        <div class="hotspot-card">
          <div class="hotspot-header">
            <div class="hotspot-location">üìç {{this.location}}</div>
            <div class="hotspot-badge">{{this.count}} {{#ifCond this.count '===' 1}}person{{else}}people{{/ifCond}}</div>
          </div>
          <div class="hotspot-details">
            <small>{{#each this.students}}{{this.name}}{{#unless @last}}, {{/unless}}{{/each}}</small>
          </div>
        </div>
      {{/each}}
    </div>
  {{else}}
    <p class="empty-state">No active destinations yet. Be the first to add one!</p>
  {{/if}}
</div>

<div class="other-destinations-section">
  <h3>All Recent Destinations</h3>
  <div style="max-height: 200px; overflow-y: auto; border: 1px solid #ccc; padding: 10px;">
    {{#if otherDestinations.length}}
      <ul style="list-style-type: none; padding: 0;">
        {{#each otherDestinations}}
          <li style="margin-bottom: 10px; border-bottom: 1px solid #eee; padding-bottom: 5px;">
            <strong>{{this.name}}</strong><br />
            <span>{{this.location}}</span><br />
            <small>Arrival: {{this.arrivalTime}}</small>
          </li>
        {{/each}}
      </ul>
    {{else}}
      <p>No destinations from other students yet.</p>
    {{/if}}
  </div>
</div>

  </div>

</div>

<!-- Optional template for dynamic add form if you're using HTMX to load a new form -->
<template id="destination-form-template">
  <form
    hx-post="/api/add-destination"
    hx-trigger="submit"
    hx-target="#destinations-container"
    hx-swap="outerHTML"
  >
    <input type="hidden" name="email" value="{{email}}" />
    <input type="hidden" name="uid" value="{{uid}}" />
    <div class="form-group">
      <label for="location">Location</label>
      <input type="text" id="location" name="location" placeholder="e.g., BWI Airport" value="{{suggestedLocation}}" required />
    </div>
    <div class="form-group">
      <label for="arrivalTime">Arrival Time</label>
      <input type="datetime-local" id="arrivalTime" name="arrivalTime" required />
    </div>
    <div class="form-actions">
      <button type="submit" class="btn-primary">Add</button>
      <button 
        type="button" 
        class="btn-cancel"
        hx-get="/api/cancel-add"
        hx-target="#add-destination-form"
        hx-swap="innerHTML"
      >
        Cancel
      </button>
    </div>
  </form>
</template>

<script src="https://unpkg.com/htmx.org@1.9.2"></script>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const hotspotPins = {{{json hotspotPins}}};

    // Only initialize map if there are pins to show
    if (hotspotPins && hotspotPins.length > 0) {
      const map = L.map('hotspot-map');

      // Add OpenStreetMap tiles
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        maxZoom: 18
      }).addTo(map);

      const bounds = [];

      // Create custom icon for hotspots with numbers
      hotspotPins.forEach(pin => {
        if (pin.lat && pin.lng) {
          // Create custom div icon with count
          const hotspotIcon = L.divIcon({
            className: 'custom-hotspot-marker',
            html: `<div style="
              background: linear-gradient(135deg, #1e88e5, #00acc1);
              color: white;
              width: 40px;
              height: 40px;
              border-radius: 50%;
              display: flex;
              align-items: center;
              justify-content: center;
              font-weight: bold;
              font-size: 16px;
              border: 3px solid white;
              box-shadow: 0 2px 8px rgba(0,0,0,0.3);
            ">${pin.count}</div>`,
            iconSize: [40, 40],
            iconAnchor: [20, 20]
          });

          const marker = L.marker([pin.lat, pin.lng], { icon: hotspotIcon })
            .addTo(map)
            .bindPopup(`
              <div class="map-popup-content">
                <div class="map-popup-location">üìç ${pin.location}</div>
                <div class="map-popup-count">${pin.count} ${pin.count === 1 ? 'person' : 'people'}</div>
                <div class="map-popup-students">${pin.students}</div>
              </div>
            `);

          bounds.push([pin.lat, pin.lng]);
        }
      });

      // Fit map to show all markers
      if (bounds.length > 0) {
        map.fitBounds(bounds, {
          padding: [50, 50],
          maxZoom: 13
        });
      } else {
        // Default center (College Park, MD area)
        map.setView([38.9897, -76.9378], 11);
      }
    }
  });
</script>